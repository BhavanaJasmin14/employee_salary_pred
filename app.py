# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SAK6NwY8TyACDQswpEBEPbeZqhzFYBmB
"""

!pip install streamlit

!pip install pyngrok pandas scikit-learn matplotlib seaborn

from google.colab import files
uploaded = files.upload()

import streamlit as st
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

st.set_page_config(page_title="Employee Salary Predictor")

st.title(" Exact Employee Salary Prediction")

@st.cache_data
def load_and_train():
    df = pd.read_csv("employee_salary_data.csv")

    # Encode categorical columns
    le_edu = LabelEncoder()
    le_dept = LabelEncoder()
    df["education_level"] = le_edu.fit_transform(df["education_level"])
    df["department"] = le_dept.fit_transform(df["department"])

    X = df.drop("salary", axis=1)
    y = df["salary"]

    model = RandomForestRegressor(n_estimators=100, random_state=42)
    model.fit(X, y)

    return model, le_edu, le_dept, X.columns

# Train model
model, le_edu, le_dept, feature_cols = load_and_train()

# Input form
st.header(" Enter Employee Details")
age = st.number_input("Age", min_value=18, max_value=65, value=30)
experience = st.number_input("Years of Experience", min_value=0, max_value=40, value=5)
education = st.selectbox("Education Level", le_edu.classes_)
department = st.selectbox("Department", le_dept.classes_)

# Encode inputs
edu_encoded = le_edu.transform([education])[0]
dept_encoded = le_dept.transform([department])[0]
input_data = pd.DataFrame([[age, experience, edu_encoded, dept_encoded]], columns=feature_cols)

# Predict button
if st.button(" Predict Salary"):
    prediction = model.predict(input_data)[0]
    st.success(f" Predicted Salary: â‚¹{prediction:,.2f}")